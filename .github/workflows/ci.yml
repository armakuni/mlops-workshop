name: CI
on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - uses: actions/checkout@v3

    - name: Set up Python 3.9.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.9.10"
    - name: Check platform
      run: python -c "import platform; print(platform.machine())"

    - name: Set up poetry
      uses: Gr1N/setup-poetry@v7

    - uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
        
    - run: poetry --version

    - name: Install python libs
      run: |
        poetry install

    - name: Run data prep
      run: make data-prep

    - name: Run model training
      run: make train

    - name: Zip the repo code and model
      env:
        COMMIT_ID: ${{ github.sha }}
      run: |
        git config --global user.email "this@pointless.com"
        git config --global user.name "Admiral Pointless"
        git add -f models/model.pkl
        git commit -m 'Added model'
        git archive -o terraform/app/code-$COMMIT_ID.zip HEAD

    - name: Run unit tests
      run: make unit-tests

    - name: Install terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Setup Terragrunt
      uses: autero1/action-terragrunt@v1.1.0
      with:
        terragrunt_version: latest

    - name: Check Terragrunt
      run: terragrunt --version

    - name: Terragrunt apply
      env:
        COMMIT_ID: ${{ github.sha }}
      run: |
        echo $(ls terraform/app)
        make tf-app-apply